/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.automatasproyecto;

import java.awt.Image;
import java.awt.List;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import static java.time.Clock.system;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mynor
 */
public class Automata extends javax.swing.JFrame {
JFileChooser seleccion = new JFileChooser();
//File archivo;
FileInputStream input;
FileOutputStream output;
Boolean EsNuevo = false;
String NombreCargo = "";
String NombreGuardo = "";
String[][] AutomataVec = new String[100][100];
Integer lenSimbolos = 0;
Integer lenEstados = 0;
Integer NumeroFilas = 0;
Integer NumeroColumnas = 0;
Integer Numero_archivos = 0;
DefaultTableModel modelo;
DefaultTableModel Transiciones;
DefaultTableModel cadenas;
Integer Numero=0;
JFrame frame = new JFrame("Grafo Generado");
 


    /**
     * Creates new form Inicio
     */
    public Automata() {
        initComponents();
        
        this.modelo = (DefaultTableModel) Tabla.getModel();   
        this.Transiciones = (DefaultTableModel) Tabla2.getModel();   
        this.cadenas = (DefaultTableModel) CadenasT.getModel();
        txt.setEnabled(false);
    
        
        Procesar.setEnabled(false);
        setBounds(100,100,1000,660);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Automatas");
        
       
        
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Procesar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        limpiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        CadenasT = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grafotxt = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                CerrarVentana(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre Archivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Tabla.setSelectionBackground(new java.awt.Color(153, 255, 255));
        jScrollPane2.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setResizable(false);
            Tabla.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        jLabel1.setText("Modelos Recientes");

        Procesar.setText("Procesar");
        Procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcesarActionPerformed(evt);
            }
        });

        jLabel8.setText("Autómata");

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Procesar, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Procesar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 678, Short.MAX_VALUE)
        );

        jLabel3.setText("Área de texto");

        txt.setColumns(20);
        txt.setRows(5);
        jScrollPane1.setViewportView(txt);

        jLabel2.setText("Símbolos");

        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        Tabla2.setSelectionBackground(new java.awt.Color(153, 255, 255));
        jScrollPane4.setViewportView(Tabla2);

        jLabel6.setText("Cadenas Analizadas");

        CadenasT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Cadena", "Es válida"
            }
        ));
        CadenasT.setSelectionBackground(new java.awt.Color(153, 255, 255));
        jScrollPane5.setViewportView(CadenasT);

        jLabel4.setText("Código en Graphviz del autómata");

        grafotxt.setColumns(20);
        grafotxt.setRows(5);
        grafotxt.setMaximumSize(new java.awt.Dimension(214, 214));
        jScrollPane3.setViewportView(grafotxt);

        jButton2.setText("Cargar Grapvhiz");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Nuevo Modelo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Cargar Modelo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Guardar Modelo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");

        jMenuItem4.setText("Manual De Usuario");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Integrantes");

        jMenuItem5.setText("Odalis Mariandré Arana Marroquín Carné: 1890-22-");
        jMenu3.add(jMenuItem5);

        jMenuItem7.setText("Diego Andrés Vásquez Saavedra Carné:1890-22-3155");
        jMenu3.add(jMenuItem7);

        jMenuItem6.setText("Marvin David Hernandez Lopez Carné:1890-21-3900");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem8.setText("Migue Angel Padilla Morales Carné:1890-21-15029");
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(84, 84, 84))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(207, 207, 207)
                                .addComponent(jLabel3)
                                .addGap(275, 275, 275)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(300, 300, 300)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CerrarVentana(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_CerrarVentana
        // TODO add your handling code here:
         Object [] opciones ={"Aceptar","Cancelar"};
 int eleccion = JOptionPane.showOptionDialog(rootPane,"¿Desea cerrar la Aplicación? Su progreso puede ser Anulado","Mensaje de Confirmacion",
 JOptionPane.YES_NO_OPTION,
 JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
 if (eleccion == JOptionPane.YES_OPTION)
 {
 System.exit(0);
 }
 else
 {
     
 }
    }//GEN-LAST:event_CerrarVentana

    private void ProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcesarActionPerformed
       procesar();
    }//GEN-LAST:event_ProcesarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
limpiar("C:\\automata\\entradaGraphviz.txt");  
limpiar("C:\\automata\\salidaGraphviz.png"); 

txt.setText("");
grafotxt.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_limpiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 guardarYMostrarImagenGraphviz();     // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//Nuevo Modelo  
Transiciones.setColumnCount(0);
     Transiciones.setRowCount(0);   
     cadenas.setRowCount(0);  
     grafotxt.setText("");
     grafotxt.setEnabled(false);
     HabilitarCajas();
     EsNuevo = true;
     txt.setText("Simbolos: \n" +
                 "Estados:\n" +
                 "Estado inicial:\n" +
                 "Estados de aceptacion:\n" +
                 "Transiciones:\n" +
                 "Cadenas a Analizar:");
     Numero_archivos += 1;
     modelo.addRow(new Object[]{Numero_archivos, "Modelo.txt"});     
     
          
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
//Cargar Modelo   
if(seleccion.showDialog(null, "Abrir")==JFileChooser.APPROVE_OPTION)
        {
          File  archivo = seleccion.getSelectedFile();
            if (archivo.canRead())
            {
                if (archivo.getName().endsWith("txt"))
                {
                    txt.setText(Copiartexto(archivo));
                    EsNuevo = false;
                    NombreCargo = archivo.getName();
                    HabilitarCajas();
                    Numero_archivos += 1;
                    modelo.addRow(new Object[]{Numero_archivos, archivo.getName()});
                   // procesar();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Archivo no Compatible");
                }
            }
        }      
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
//Guardar Modelo     
   Boolean HayError = true;
     String Mensaje = "";
     if (!txt.getText().isEmpty()) {    
         while (HayError)
         {
             HayError = false;
        if(seleccion.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION)
        {
File            archivo=seleccion.getSelectedFile();
            NombreGuardo = archivo.getName();
            if (archivo.getName().endsWith("txt"))
               {
                   if (EsNuevo)
                   {
                      if (archivo.exists())
                      {
                          HayError = true;
                          Mensaje = "El Archivo ya existe";
                          JOptionPane.showMessageDialog(null, Mensaje);
                      }
                   }
                   else
                   {
                       if (archivo.exists() && !NombreGuardo.equals(NombreCargo))
                       {
                           HayError = ConfirmarReemplazo();
                       } 
                   }
                   if (!HayError){
                     Mensaje = GrabarTexto(archivo, txt.getText());
                     JOptionPane.showMessageDialog(null, Mensaje);
                   }
                   
               }
               else
               {
                   JOptionPane.showMessageDialog(null, "El archivo debe tener extensión '.txt'");
                   HayError = true;
               }
            
        }              
         }
 
     }
     else
     {
        JOptionPane.showMessageDialog(null, "La Cadena esta vacia"); 
     }  
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
descargarArchivoPDF();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Automata().setVisible(true);
            }
        });
    }
    
    public void limpiar(String rutaArchivo){
       File archivo = new File(rutaArchivo);
        
        // Verificar si el archivo existe
        if (archivo.exists()) {
            // Intentar eliminar el archivo
            if (archivo.delete()) {
                System.out.println("El archivo " + rutaArchivo + " fue eliminado exitosamente.");
                
            } else {
                System.out.println("No se pudo eliminar el archivo " + rutaArchivo);
                
            }
        } else {
            System.out.println("El archivo " + rutaArchivo + " no existe.");
            
        }
    }
    public String Copiartexto(File archivo) /* Introduce el texto a la ventana */ 
    {
        String Texto="";
        try
        {
           FileInputStream entrada = new FileInputStream(archivo);
           int ascii;
           while((ascii=entrada.read())!= -1)
           {
               char caracter = (char)ascii;
               Texto += caracter;
           } 
        }
        catch(Exception e)
        {
        }
        return Texto;
    }
    
        public String GrabarTexto(File archivo, String Texto) /* Graba Texto en Archivo */ 
    {
        String mensaje = "";
        
        if (EsNuevo == true)
        {
           try {
           if (archivo.createNewFile())
           { 
           }
               } catch (IOException ex) 
               {
               Logger.getLogger(Automata.class.getName()).log(Level.SEVERE, null, ex);
               }
        }
        try
        {
           FileOutputStream salida = new FileOutputStream(archivo);
           byte[] Textobytes = Texto.getBytes();
           salida.write(Textobytes);
           mensaje = "Se ha Guardado el Archivo exitosamente";           
          
        }
        catch(Exception e)
        {
          mensaje = "";
        }
        return mensaje;
    }
public Boolean ConfirmarReemplazo()
{
    Boolean Confirmo = false;
 Object [] opciones ={"Aceptar","Cancelar"};
 int eleccion = JOptionPane.showOptionDialog(rootPane,"El Archivo ya existe, ¿Desea reemplazarlo?","Mensaje de Confirmacion",
 JOptionPane.YES_NO_OPTION,
 JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
 if (eleccion == JOptionPane.YES_OPTION)
 {
    Confirmo = true;
 }  
    return !Confirmo;
}
public void HabilitarCajas()
{
    txt.setEnabled(true);
   
    Procesar.setEnabled(true);
}

public void procesar() {
    //jLabel9.setIcon(null);
    
     ValidaAutomata1 metodos = new ValidaAutomata1();
    int cuenta_dospuntos = metodos.CuentaCaracter(txt.getText(), ":");
    int cuenta_comas = metodos.CuentaCaracter(txt.getText(), ",");
    grafotxt.setEnabled(false);
    Transiciones.setColumnCount(0);
    Transiciones.setRowCount(0);
    cadenas.setRowCount(0);

    if (cuenta_dospuntos == 6 && cuenta_comas > 0) {
        String[] lineas = txt.getText().split("\n");
        var lineasList = Arrays.stream(lineas)    .filter(linea -> !linea.isEmpty()) .collect(Collectors.toList());


        String[] Simbolos = metodos.Obtener_array(lineasList.get(0));
        String[] Estados = metodos.Obtener_array(lineasList.get(1));
        String[] Estados_inicial = metodos.Obtener_array(lineasList.get(2));
        String[] Estado_Aceptacion = metodos.Obtener_array(lineasList.get(3));

        try {
            for (int i = 0; i <= Estados.length; i++) {
                if (i != Estados.length) {
                    AutomataVec[i + 1][0] = Estados[i];
                    if (metodos.EstaenArreglo(Estados[i], Estado_Aceptacion)) {
                        AutomataVec[i + 1][0] = "*" + AutomataVec[i + 1][0];
                    }
                    if (metodos.EstaenArreglo(Estados[i], Estados_inicial)) {
                        AutomataVec[i + 1][0] = ">" + AutomataVec[i + 1][0];
                    }
                }
                for (int j = 0; j < Simbolos.length; j++) {
                    if (i == 0) {
                        AutomataVec[i][j + 1] = Simbolos[j];
                    } else {
                        String[] Transa = metodos.Obtener_array(lineasList.get(4 + i));
                        if (Transa.length != Simbolos.length) {
                            Transa = Arrays.copyOf(Transa, Simbolos.length);
                            Transa[Simbolos.length - 1] = "";
                        }
                        AutomataVec[i][j + 1] = Transa[j];
                    }
                }
            }

            Transiciones.addColumn("Estados");
            for (String simbolo : Simbolos) {
                Transiciones.addColumn(simbolo);
            }

            for (int i = 1; i <= Estados.length; i++) {
                String[] array = new String[Simbolos.length + 1];
                System.arraycopy(AutomataVec[i], 0, array, 0, Simbolos.length + 1);
                Transiciones.addRow(array);
            }

            /** Cadenas Válidas */
            for (int i = Estados.length + 6; i < lineasList.size(); i++) {
                String cadena = metodos.Reemplaza(lineasList.get(i), ",");
                cadena = metodos.Reemplaza(cadena, " ");
                Boolean EsValida = metodos.ValidaCadena(cadena, AutomataVec, Simbolos.length, Estados.length);
                cadenas.addRow(new Object[]{cadena, EsValida ? "Sí" : "No"});
            }

            Boolean error = false;
            grafotxt.setText(metodos.ArmaGrafoGv(AutomataVec, Simbolos.length, Estados.length, Numero, error, ""));

            if (!error) {/*
                lenSimbolos = Simbolos.length;
                lenEstados = Estados.length;
                ImageIcon imagen = new ImageIcon("C:\\automata\\salidaGraphviz.png");
                jLabel9.setIcon(imagen);*/
                guardarYMostrarImagenGraphviz();
                Numero += 1;
                
                grafotxt.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se puede procesar el autómata");
        }
    } else {
        JOptionPane.showMessageDialog(null, "No se puede procesar el autómata");
    }
}

private void guardarYMostrarImagenGraphviz() {
    String contenido = grafotxt.getText();
    String ubicacionArchivoEntrada = "C:\\automata\\entradaGraphviz.txt";
    String ubicacionArchivoSalida = "C:\\automata\\salidaGraphviz"+ System.currentTimeMillis() +".png";
    String ubicacionGraphviz = "C:\\Program Files\\Graphviz\\bin\\dot";

    try (PrintStream salida = new PrintStream(new File(ubicacionArchivoEntrada))) {
        salida.print(contenido);
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(null, "Error al guardar el archivo\n" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        String[] comandoString = {ubicacionGraphviz, "-Tpng", "-Gdpi=78", ubicacionArchivoEntrada, "-o", ubicacionArchivoSalida};
        Process ejecuta = Runtime.getRuntime().exec(comandoString);

        try (BufferedReader stdInput = new BufferedReader(new InputStreamReader(ejecuta.getInputStream()));
             BufferedReader stdError = new BufferedReader(new InputStreamReader(ejecuta.getErrorStream()))) {

            stdInput.lines().forEach(System.out::println);
            stdError.lines().forEach(System.out::println);
        }

        int exitCode = ejecuta.waitFor();
        if (exitCode == 0) {
            mostrarImagen(ubicacionArchivoSalida);
        } else {
            System.out.println("Error al generar la imagen. Código de salida: " + exitCode);
        }
    } catch (Exception o) {
        o.printStackTrace();
    }
}

private void mostrarImagen(String ubicacionArchivoSalida) {
    ImageIcon imagen = new ImageIcon(ubicacionArchivoSalida);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame.setSize(800, 600);
    frame.setLocationRelativeTo(null);
    JLabel label = new JLabel(imagen);
    frame.add(label);
    frame.setVisible(true);
}

private void descargarArchivoPDF() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar PDF");

        fileChooser.setSelectedFile(new File("Manual.pdf"));
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File archivoDestino = fileChooser.getSelectedFile();

            // Cargar el archivo PDF desde los recursos del programa
            try (InputStream pdfStream = getClass().getResourceAsStream("/ManualUsuario.pdf");
                 FileOutputStream fos = new FileOutputStream(archivoDestino)) {

                if (pdfStream == null) {
                    JOptionPane.showMessageDialog(this, "El archivo PDF no se pudo encontrar.");
                    return;
                }

                byte[] buffer = new byte[1024];
                int bytesRead;

                while ((bytesRead = pdfStream.read(buffer)) > 0) {
                    fos.write(buffer, 0, bytesRead);
                }

                JOptionPane.showMessageDialog(this, "PDF descargado exitosamente.");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al descargar el archivo: " + ex.getMessage());
            }
        }
    }






    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CadenasT;
    public javax.swing.JButton Procesar;
    private javax.swing.JTable Tabla;
    private javax.swing.JTable Tabla2;
    public javax.swing.JTextArea grafotxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton limpiar;
    private javax.swing.JTextArea txt;
    // End of variables declaration//GEN-END:variables
}

